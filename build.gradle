plugins {
    id 'com.github.johnrengelman.shadow' version '7.0.0'
    id 'java'
}

group 'me.battledash'
version '1.1.0'

apply plugin: 'idea'
apply plugin: 'maven-publish'

sourceCompatibility = 17
targetCompatibility = 17

repositories {
    mavenCentral()
    mavenLocal()
}

dependencies {
    implementation group: 'com.google.code.findbugs', name: 'annotations', version: '3.0.0'
    compileOnly 'org.projectlombok:lombok:1.18.22'
    annotationProcessor 'org.projectlombok:lombok:1.18.22'

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'

    implementation group: 'org.apache.logging.log4j', name: 'log4j-jul', version: '2.14.1'
    implementation group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.14.1'
    implementation group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.14.1'
    implementation group: 'org.apache.logging.log4j', name: 'log4j-slf4j-impl', version: '2.14.1'
    implementation group: 'org.apache.logging.log4j', name: 'log4j-web', version: '2.14.1'
    implementation group: 'net.minecrell', name: 'terminalconsoleappender', version: '1.2.0'
    implementation group: 'org.jline', name: 'jline-terminal', version: '3.19.0'
    implementation group: 'org.jline', name: 'jline-reader', version: '3.19.0'
    implementation group: 'org.jline', name: 'jline-terminal-jansi', version: '3.19.0'

    implementation group: 'commons-io', name: 'commons-io', version: '2.11.0'
    implementation group: 'io.netty', name: 'netty-all', version: '4.1.75.Final'
    implementation group: 'com.google.code.gson', name: 'gson', version: '2.9.0'
    implementation group: 'com.github.luben', name: 'zstd-jni', version: '1.5.2-2'
    implementation group: 'com.google.guava', name: 'guava', version: '31.1-jre'
    implementation group: 'commons-codec', name: 'commons-codec', version: '1.15'
    implementation group: 'org.apache.commons', name: 'commons-collections4', version: '4.4'
}

test {
    useJUnitPlatform()
}

publishing {
    publications {
        shadow(MavenPublication) {
            from components.java
            artifact shadowJar
        }
    }
}

jar {
    enabled = false

    archivesBaseName = 'KyberServer'

    manifest {
        attributes(
                'Main-Class': 'me.battledash.kyber.KyberServer',
                'Multi-Release': true,
                'Implementation-Version': archiveVersion,
        )
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

shadowJar {
    classifier ''
    transform(com.github.jengelman.gradle.plugins.shadow.transformers.Log4j2PluginsCacheFileTransformer)
}

task copyToBuildsDir(type: Copy) {
    from 'build/libs'
    into '../bin'
}

copyToBuildsDir.dependsOn(shadowJar)
